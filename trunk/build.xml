<?xml version="1.0" encoding="UTF-8" ?>
<project name="LOLCODE" default="all" basedir=".">

    <property file="build.properties"/>
    <property name="dir.generated" value="build/generated"/>
    <property name="dir.classes" value="build/classes"/>

    <path id="project.classpath">
        <pathelement location="${dir.classes}"/>
    </path>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="lib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <target name="all" depends="clean, genparser,compile,test,doc, jar" description="Run all steps"/>

    <target name="clean">
        <delete dir="build" quiet="true"/>
        <delete dir="reports" quiet="true"/>
        <delete dir="docs" quiet="true"/>
    </target>

    <target name="genparser">
        <mkdir dir="${dir.generated}/com/lolcode/parser"/>
        <jjtree target="src/com/lolcode/parser/LolCode.jjt" outputdirectory="src/com/lolcode/parser"
                javacchome="lib/javacc-4.0"/>
        <javacc target="src/com/lolcode/parser/LolCode.jj" outputdirectory="${dir.generated}/com/lolcode/parser"
                javacchome="lib/javacc-4.0" static="false"/>
    </target>

    <target name="compile" depends="genparser">
        <mkdir dir="${dir.classes}"/>
        <javac destdir="${dir.classes}" source="1.5">
            <src path="src"/>
            <src path="${dir.generated}"/>
            <src path="test"/>
        </javac>
    </target>

    <!-- For JUnit to work, you must have the junit.jar in your CLASSPATH, ANT_HOME/lib or .ant/lib
              as per http://ant.apache.org/faq.html#delegating-classloader-1.6 -->
    <target name="test" depends="compile">
        <mkdir dir="reports"/>
        <junit printsummary="withOutAndErr" haltonfailure="yes">
            <classpath>
                <pathelement location="${dir.classes}"/>
                <pathelement location="lib/junit4.0/junit-4.0.jar"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest fork="no" todir="reports">
                <fileset dir="test">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
        <for param="file" parallel="false">
            <path>
                <fileset dir="test/samples" includes="*.LOL"/>
            </path>
            <sequential>
                <echo>Checking @{file}</echo>
                <java classname="com.lolcode.Parse" failonerror="true">
                    <classpath refid="project.classpath"/>
                    <arg value="@{file}"/>
                </java>
            </sequential>
        </for>
    </target>

    <target name="doc" description="Generate JavaDoc" depends="genparser">
        <javadoc
                destdir="docs/api"
                author="true"
                version="true"
                use="true"
                windowtitle="LolCode API">

            <fileset dir="src" defaultexcludes="yes">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${dir.generated}" defaultexcludes="yes">
                <include name="**/*.java"/>
            </fileset>

            <doctitle><![CDATA[<h1>LOLCODE</h1>]]></doctitle>
            <bottom><![CDATA[<i>An implementation of LOLCODE</i>]]></bottom>
            <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
        </javadoc>
    </target>

    <!-- preparation -->
    <target name="prepare">
        <mkdir dir="build/dist"/>
        <propertyregex property="build.revision.numeric"
                       input="${build.revision}"
                       regexp="\$Revision: (\d+) \$"
                       select="\1"/>
        <property name="build.revision.numeric" value="dummy value to fix Intellij warning"/>
        <property name="build.number" value="${release.number}.${build.revision.numeric}"/>
    </target>

    <!-- make jar file-->
    <target name="jar" depends="prepare, compile">
        <jar destfile="build/dist/LOLCODE.jar">
            <fileset dir="${dir.classes}">
                <exclude name="**/*Test.class"/>
            </fileset>
            <manifest>
                <attribute name="Main-Class" value="com.lolcode.Run"/>
                <attribute name="Manifest-Version" value="0.1"/>
                <attribute name="Created-By" value="Brian Egge, Adam Lindsay"/>
            </manifest>
        </jar>
        <copy file="bin/lol.sh" tofile="build/dist/lol"/>
        <chmod file="build/dist/lol" perm="ugo+rx"/>
        <copy file="build/dist/LOLCODE.jar" tofile="build/dist/LOLCODE-${build.number}.jar"/>
    </target>

</project>
	